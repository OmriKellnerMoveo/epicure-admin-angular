{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestaurantsService {\n  constructor(http) {\n    this.http = http;\n    this.restaurants = [];\n  }\n\n  getAllRestaurants() {\n    this.restaurants = [];\n    return this.http.get('http://localhost:9000/api/v1/restaurant').pipe(map(responseData => {\n      for (const key in responseData) {\n        this.restaurants.push(responseData[key]);\n      }\n\n      return this.restaurants;\n    }));\n  } // getAllRestaurants = async (setPopularRestaurants) => {\n  //   try {\n  //     const url = `http://localhost:9000/api/v1/restaurant`;\n  //     const response = await fetch(url)\n  //     const responseJson = await response.json();\n  //     setPopularRestaurants(responseJson)\n  //   }catch (err){\n  //     console.log(err)\n  //   }\n  // }\n\n\n  addRestaurant(obj) {\n    console.log('Start'); // console.log(obj);\n\n    return this.http.post('http://localhost:9000/api/v1/restaurant', obj);\n  }\n\n  updateRestaurant(id, obj) {\n    console.log(id, obj); // return this.http.put(\n    //   `http://localhost:9000/api/v1/restaurants/restaurant/${id}`,\n    //   obj\n    // );\n  }\n\n  deleteRestaurant(id) {\n    console.log(id);\n    return this.http.delete(`http://localhost:9000/api/v1/restaurants/restaurant/${id}`);\n  }\n\n}\n\nRestaurantsService.ɵfac = function RestaurantsService_Factory(t) {\n  return new (t || RestaurantsService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nRestaurantsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RestaurantsService,\n  factory: RestaurantsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/omrikellner/WebstormProjects/epicure-admin-angular/src/app/services/restaurants.service.ts"],"names":["map","i0","i1","RestaurantsService","constructor","http","restaurants","getAllRestaurants","get","pipe","responseData","key","push","addRestaurant","obj","console","log","post","updateRestaurant","id","deleteRestaurant","delete","ɵfac","RestaurantsService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,kBAAN,CAAyB;AAC5BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,WAAL,GAAmB,EAAnB;AACA,WAAO,KAAKD,IAAL,CAAUG,GAAV,CAAc,yCAAd,EAAyDC,IAAzD,CAA8DT,GAAG,CAAEU,YAAD,IAAkB;AACvF,WAAK,MAAMC,GAAX,IAAkBD,YAAlB,EAAgC;AAC5B,aAAKJ,WAAL,CAAiBM,IAAjB,CAAsBF,YAAY,CAACC,GAAD,CAAlC;AACH;;AACD,aAAO,KAAKL,WAAZ;AACH,KALuE,CAAjE,CAAP;AAMH,GAb2B,CAc5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAO,EAAAA,aAAa,CAACC,GAAD,EAAM;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADe,CAEf;;AACA,WAAO,KAAKX,IAAL,CAAUY,IAAV,CAAe,yCAAf,EAA0DH,GAA1D,CAAP;AACH;;AACDI,EAAAA,gBAAgB,CAACC,EAAD,EAAKL,GAAL,EAAU;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ,EAAgBL,GAAhB,EADsB,CAEtB;AACA;AACA;AACA;AACH;;AACDM,EAAAA,gBAAgB,CAACD,EAAD,EAAK;AACjBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACA,WAAO,KAAKd,IAAL,CAAUgB,MAAV,CAAkB,uDAAsDF,EAAG,EAA3E,CAAP;AACH;;AAvC2B;;AAyChChB,kBAAkB,CAACmB,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,SAAO,KAAKA,CAAC,IAAIrB,kBAAV,EAA8BF,EAAE,CAACwB,QAAH,CAAYvB,EAAE,CAACwB,UAAf,CAA9B,CAAP;AAAmE,CAAtI;;AACAvB,kBAAkB,CAACwB,KAAnB,GAA2B,aAAc1B,EAAE,CAAC2B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE1B,kBAAT;AAA6B2B,EAAAA,OAAO,EAAE3B,kBAAkB,CAACmB,IAAzD;AAA+DS,EAAAA,UAAU,EAAE;AAA3E,CAAtB,CAAzC","sourcesContent":["import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestaurantsService {\n    constructor(http) {\n        this.http = http;\n        this.restaurants = [];\n    }\n    getAllRestaurants() {\n        this.restaurants = [];\n        return this.http.get('http://localhost:9000/api/v1/restaurant').pipe(map((responseData) => {\n            for (const key in responseData) {\n                this.restaurants.push(responseData[key]);\n            }\n            return this.restaurants;\n        }));\n    }\n    // getAllRestaurants = async (setPopularRestaurants) => {\n    //   try {\n    //     const url = `http://localhost:9000/api/v1/restaurant`;\n    //     const response = await fetch(url)\n    //     const responseJson = await response.json();\n    //     setPopularRestaurants(responseJson)\n    //   }catch (err){\n    //     console.log(err)\n    //   }\n    // }\n    addRestaurant(obj) {\n        console.log('Start');\n        // console.log(obj);\n        return this.http.post('http://localhost:9000/api/v1/restaurant', obj);\n    }\n    updateRestaurant(id, obj) {\n        console.log(id, obj);\n        // return this.http.put(\n        //   `http://localhost:9000/api/v1/restaurants/restaurant/${id}`,\n        //   obj\n        // );\n    }\n    deleteRestaurant(id) {\n        console.log(id);\n        return this.http.delete(`http://localhost:9000/api/v1/restaurants/restaurant/${id}`);\n    }\n}\nRestaurantsService.ɵfac = function RestaurantsService_Factory(t) { return new (t || RestaurantsService)(i0.ɵɵinject(i1.HttpClient)); };\nRestaurantsService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: RestaurantsService, factory: RestaurantsService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}